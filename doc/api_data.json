[
  {
    "group": "Food",
    "type": "get",
    "url": "/api/stats",
    "title": "Get food items count in database",
    "name": "getFoodCount",
    "version": "1.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON containing the number of food item in database</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{ items: 28522 }",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/foods.js",
    "groupTitle": "Food"
  },
  {
    "group": "Food",
    "type": "get",
    "url": "/api/foods",
    "title": "Get specific food items according to criterias",
    "name": "getFoods",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "limit",
            "description": "<p>Query param - Results limit per page (50 by default)</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "page",
            "description": "<p>Query param - Page number (1 by default)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>Query param - Find the food items matching the specified name pattern</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "quantity",
            "description": "<p>Query param - Find the food items with the specified serving size/quantity</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "store",
            "description": "<p>Query param - Find the food items available in a specified store</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "nutrition_score",
            "description": "<p>Query param - Find the food items with a nutrition score equal or above the specified nutrition score</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "ingredients",
            "description": "<p>Query param -  Find the food items containing the specified ingredient</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "additives",
            "description": "<p>Query param - Find the food items not containing the specified additive</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "nutriments",
            "description": "<p>Query param - Find the food items containing the specified nutriment</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "allergens",
            "description": "<p>Query param - Find the food items not containing the specified allergen</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "vitamins",
            "description": "<p>Query param - Find the food items containing the specified vitamin</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "sortBy",
            "description": "<p>Query param - (values: name, nutriscore or price)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "debug",
            "description": "<p>Query param - To display the true results from database (without our model abstraction)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON array containing the food items with the requested criterias</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "[{\n    \"_id\": \"00\",\n    \"name\": \"Lignaform\",\n    \"serving_size\": \"5 barres de 40gr\",\n    \"nutrition_grade\": \"c\",\n    \"ingredients\": [\n    ],\n    \"nutriments\": {...\n    },\n    \"allergens\": [],\n    \"vitamins\": [],\n    \"pricing\": [],\n    \"imgUrl\": \"https://static.openfoodfacts.org/images/products/00/front_fr.14.full.jpg\",\n    \"score\": \"c\",\n    \"avgPrice\": 0\n  }]",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/foods.js",
    "groupTitle": "Food"
  },
  {
    "group": "Food",
    "type": "get",
    "url": "/api/foods/:itemId",
    "title": "Get a specific food item with its id",
    "name": "home",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "itemId",
            "description": "<p>Path param - ID of a given food item.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON array containing the matching element (or not)</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "[{\n    \"_id\": \"0002200001221\",\n    \"name\": \"Big choco\",\n    \"serving_size\": \"250 g\",\n    \"nutrition_grade\": \"\",\n    \"ingredients\": [],\n    \"additives\": [],\n    \"nutriments\": {},\n    \"allergens\": [],\n    \"vitamins\": [],\n    \"pricing\": [],\n    \"imgUrl\": \"https://static.openfoodfacts.org/images/products/000/220/000/1221/front_fr.3.full.jpg\",\n    \"score\": \"b\",\n    \"avgPrice\": 0\n   }]",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/foods.js",
    "groupTitle": "Food"
  },
  {
    "group": "Food",
    "type": "post",
    "url": "/api/foods/:itemId/pricing",
    "title": "Add pricing to an item",
    "name": "postPriceForFood",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "itemId",
            "description": "<p>Path param - ID of a given food item.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n  \"price\": 20,\n  \"store\": {\n    \"name\": \"Carrefour Antibes\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>Pricing information</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{\n    \"item\": {\n        \"_id\": \"00000\",\n        \"pricing\": [\n            {\n                \"_uuid\": \"ce0199b1-13b0-45f3-a9c1-454072e432a8\",\n                \"price\": 20,\n                \"currency\": \"euro\",\n                \"date\": 1550503498361,\n                \"store\": {\n                    \"_uuid\": \"99ef207806547c6c203339be3b096787595f8e5d\",\n                    \"name\": \"Carrefour Antibes\",\n                    \"location\": {\n                        \"type\": \"Point\",\n                        \"coordinates\": {\n                            \"lat\": \"43.60356775\",\n                            \"lng\": \"7.08884616418128\"\n                        }\n                    },\n                    \"country_code\": \"fr\"\n                }\n            }\n        ]\n    }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/foods.js",
    "groupTitle": "Food"
  },
  {
    "group": "Recipe",
    "type": "get",
    "url": "/api/recipes",
    "title": "Get all recipes from database",
    "name": "getAllRecipes",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "limit",
            "description": "<p>Query param - Results limit per page (50 by default)</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "page",
            "description": "<p>Query param - Page number (1 by default)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "sortBy",
            "description": "<p>Query param - (values: name, date)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "contains",
            "description": "<p>Query param - Find the recipes containing the specified ingredients name</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON containing the number of recipes in database</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "[\n  {\n    \"_id\": \"5c6037882c8865136cad3976\",\n    \"name\": \"Pâtes Carbonara\",\n    \"ingredients\": [\n      \"10114992\",\n      \"0240891027483\"\n    ],\n    \"date\": 1549809544496,\n    \"comments\": [\n      {\n        \"username\": \"Le cuisiner\",\n        \"text\": \"Si tu sais pas faire ça, t'es pas italien\"\n      }\n    ]\n  },...\n]",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Recipe",
    "type": "get",
    "url": "/api/recipes/:recipeId",
    "title": "Get a specific recipe by its id",
    "name": "getRecipeById",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "recipeId",
            "description": "<p>Path param - the id of the recipe</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON array containing the recipe matching the id (or not).</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "[\n  {\n    \"_id\": \"5c6037882c8865136cad3976\",\n    \"name\": \"Pâtes Carbonara\",\n    \"ingredients\": [\n      \"10114992\",\n      \"0240891027483\"\n    ],\n    \"date\": 1549809544496,\n    \"comments\": [\n      {\n        \"username\": \"Le cuisiner\",\n        \"text\": \"Si tu sais pas faire ça, t'es pas italien\"\n      }\n    ]\n  }\n]",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Recipe",
    "type": "get",
    "url": "/api/recipes/stats",
    "title": "Get recipes count in database",
    "name": "getRecipeCount",
    "version": "1.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON containing the number of recipes in database</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{ items: 7 }",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Recipe",
    "type": "get",
    "url": "/api/recipes/:recipeId/price",
    "title": "Get the average price of a recipe",
    "name": "getRecipePrice",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "recipeId",
            "description": "<p>Path param - the id of the recipe</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON containing the sum of the average price of every ingredient of the recipe</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{\n  \"price\": 0\n}",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Recipe",
    "type": "post",
    "url": "/api/recipes/parse",
    "title": "Parse a given recipe",
    "name": "parseRecipe",
    "version": "1.0.0",
    "parameter": {
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"0\":\"macaroni\",\n    \"1\":\"cheese\",\n    \"filter\":\"e211\" // Filter is optional\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON containing for each ingredient, every possible matching food item</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{\n    \"0\": [\n        <items that are macaroni and don't have e211>],\n    \"1\":[]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Recipe",
    "type": "post",
    "url": "/api/recipes/:recipeId/comment",
    "title": "Comment on a given recipe",
    "name": "postCommentOnRecipe",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "recipeId",
            "description": "<p>Path param - the id of the recipe</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"comment\":{\n        \"username\":\"Le cuisiner\",\n        \"text\": \"Si tu sais pas faire ça, t'es pas italien\",\n        \"date\": 10801808\n    }\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>An empty JSON with status 200</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{}",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Recipe",
    "type": "post",
    "url": "/api/recipes",
    "title": "Create a recipe",
    "name": "postRecipe",
    "version": "1.0.0",
    "parameter": {
      "examples": [
        {
          "title": "Request-Example:",
          "content": "{\n    \"name\":\"Ma recette\",\n    \"ingredients\":[\"Chou\",\"Fleur\"]\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>A JSON being the newest created recipe</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{\n    \"name\":\"Ma recette\",\n    \"ingredients\":[\"Chou\",\"Fleur\"]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/recipes.js",
    "groupTitle": "Recipe"
  },
  {
    "group": "Util",
    "type": "get",
    "url": "/api/stores/search",
    "title": "Get stores in a selected region",
    "name": "getStoresInRegion",
    "version": "1.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "region",
            "description": "<p>Query param - ISO country code (i.e. fr)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "JSON",
            "optional": false,
            "field": "result",
            "description": "<p>a JSON containing a stores key with an array</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "{\n    \"stores\": [\n        {\n            \"_uuid\": \"99ef207806547c6c203339be3b096787595f8e5d\",\n            \"name\": \"Carrefour Antibes\",\n            \"location\": {\n                \"type\": \"Point\",\n                \"coordinates\": {\n                    \"lat\": \"43.60356775\",\n                    \"lng\": \"7.08884616418128\"\n                }\n            },\n            \"country_code\": \"fr\"\n        }\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "backend_node_express/api/utils.js",
    "groupTitle": "Util"
  },
  {
    "group": "Util",
    "type": "get",
    "url": "/",
    "title": "Server heartbeat",
    "name": "home",
    "version": "1.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "result",
            "description": "<p>A nice message</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "On success",
          "content": "Server online",
          "type": "String"
        }
      ]
    },
    "filename": "backend_node_express/api/utils.js",
    "groupTitle": "Util"
  }
]
